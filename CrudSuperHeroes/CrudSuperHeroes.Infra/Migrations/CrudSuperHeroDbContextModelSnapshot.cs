// <auto-generated />
using System;
using CrudSuperHeroes.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CrudSuperHeroes.Infra.Migrations
{
    [DbContext(typeof(CrudSuperHeroDbContext))]
    partial class CrudSuperHeroDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CrudSuperHeroes.Domain.Entities.Herois", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Altura")
                        .HasColumnType("real");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeHeroi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Herois");
                });

            modelBuilder.Entity("CrudSuperHeroes.Domain.Entities.HeroisSuperPoderes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HeroiId")
                        .HasColumnType("int");

                    b.Property<int>("SuperPoderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HeroiId");

                    b.HasIndex("SuperPoderId");

                    b.ToTable("HeroisSuperPoderes");
                });

            modelBuilder.Entity("CrudSuperHeroes.Domain.Entities.SuperPoderes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuperPoder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SuperPoderes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "pode gerar um campo de energia , permitindo que ele se mova livremente e levite",
                            SuperPoder = "Voa"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "é a habilidade de realizar proezas sobre-humanas de força física ou exercer força física além do escopo do que um humano é capaz",
                            SuperPoder = "Super Força"
                        });
                });

            modelBuilder.Entity("CrudSuperHeroes.Domain.Entities.HeroisSuperPoderes", b =>
                {
                    b.HasOne("CrudSuperHeroes.Domain.Entities.Herois", "Herois")
                        .WithMany("HeroisSuperPoderes")
                        .HasForeignKey("HeroiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CrudSuperHeroes.Domain.Entities.SuperPoderes", "SuperPoderes")
                        .WithMany("HeroisSuperPoderes")
                        .HasForeignKey("SuperPoderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Herois");

                    b.Navigation("SuperPoderes");
                });

            modelBuilder.Entity("CrudSuperHeroes.Domain.Entities.Herois", b =>
                {
                    b.Navigation("HeroisSuperPoderes");
                });

            modelBuilder.Entity("CrudSuperHeroes.Domain.Entities.SuperPoderes", b =>
                {
                    b.Navigation("HeroisSuperPoderes");
                });
#pragma warning restore 612, 618
        }
    }
}
